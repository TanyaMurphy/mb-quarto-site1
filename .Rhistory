#| label: setup
#| echo: false
library(glue)
library(lubridate)
library(tidyverse)
library(DBI)
library(RPostgres)
#
con <- dbConnect(RPostgres::Postgres(),
dbname = "mbdump",
host = "localhost", port = 5432,
user = Sys.getenv("POSTGRES_USER"),
password = Sys.getenv("POSTGRES_PASSWORD")
)
dbListTables(conn = con)
# dbDisconnect(con)
myseries <- dbGetQuery(con, "
SELECT id_series, series_name, series_comment, series_type_name,
series_type, ordering_type, entity_type, parent, child_order,
series_type_description
FROM myseries;")
table(myseries$entity_type, useNA = "ifany")
filter(myseries, entity_type == "recording") |> View()
myrec <- dbGetQuery(con, "
SELECT ms.id_series, ms.series_name, ms.series_comment,
ms.series_type_name, ms.series_type, ms.ordering_type, ms.entity_type,
ms.parent, ms.child_order, ms.series_type_description, lrs.link_order,
r.id AS recording_id, r.name AS recording_name,
r.artist_credit, ac.name AS artist_credit_name,
r.comment AS recording_comment
FROM myseries ms
LEFT JOIN l_recording_series lrs ON ms.id_series = lrs.entity1
LEFT JOIN recording r ON lrs.entity0 = r.id
LEFT JOIN artist_credit ac ON r.artist_credit = ac.id
WHERE ms.entity_type = 'recording'
AND r.video = 'f';")
View(myrec)
myseries <- dbGetQuery(con, "
SELECT id_series, series_name, series_comment, series_type_name,
series_type, ordering_type, entity_type, parent, child_order,
series_type_description
FROM myseries
WHERE (series_name LIKE '%Billboard%' or series_name LIKE '%Juno%'
or series_name LIKE '%Grammy%'
or series_name LIKE '%Rolling Stone%'
or series_comment LIKE '%SPIN magazine%'
or series_name LIKE '%Academy Awards%'
or series_name LIKE '%Roll Hall of Fame%'
or series_name LIKE 'Brit Award%')
AND NOT entity_type = 'event'
ORDER BY entity_type, series_name;
")
View(myseries)
filter(myseries, entity_type == "recording") |> View()
myrec <- dbGetQuery(con, "
SELECT ms.id_series, ms.series_name, ms.series_comment,
ms.series_type_name, ms.series_type, ms.ordering_type, ms.entity_type,
ms.parent, ms.child_order, ms.series_type_description, lrs.link_order,
r.id AS recording_id, r.name AS recording_name,
r.artist_credit, ac.name AS artist_credit_name,
r.comment AS recording_comment
FROM myseries ms
LEFT JOIN l_recording_series lrs ON ms.id_series = lrs.entity1
LEFT JOIN recording r ON lrs.entity0 = r.id
LEFT JOIN artist_credit ac ON r.artist_credit = ac.id
WHERE ms.entity_type = 'recording'
AND (series_name LIKE '%Billboard%' or series_name LIKE '%Juno%'
or series_name LIKE '%Grammy%'
or series_name LIKE '%Rolling Stone%'
or series_comment LIKE '%SPIN magazine%'
or series_name LIKE '%Academy Awards%'
or series_name LIKE '%Roll Hall of Fame%'
or series_name LIKE 'Brit Award%')
AND r.video = 'f';")
View(myrec)
mywrk <- dbGetQuery(con, "
SELECT ms.id_series, ms.series_name, ms.series_comment,
ms.series_type_name, ms.series_type, ms.ordering_type, ms.entity_type,
ms.parent, ms.child_order, ms.series_type_description, l.link_order,
r.id AS work_id, r.name AS work_name,
r.comment AS work_comment, r.type AS work_type
FROM myseries ms
LEFT JOIN l_series_work l ON ms.id_series = l.entity0
LEFT JOIN work r ON l.entity1 = r.id
WHERE ms.entity_type = 'work';")
View(mywrk)
mywrk <- dbGetQuery(con, "
SELECT ms.id_series, ms.series_name, ms.series_comment,
ms.series_type_name, ms.series_type, ms.ordering_type, ms.entity_type,
ms.parent, ms.child_order, ms.series_type_description, l.link_order,
r.id AS work_id, r.name AS work_name,
r.comment AS work_comment, r.type AS work_type
FROM myseries ms
LEFT JOIN l_series_work l ON ms.id_series = l.entity0
LEFT JOIN work r ON l.entity1 = r.id
WHERE ms.entity_type = 'work';")
#| label: setup
#| echo: false
library(glue)
library(lubridate)
library(tidyverse)
# library(DBI)
# library(RPostgreSQL)
#
# con <- dbConnect("PostgreSQL", dbname = "mbdump",
#     #host = "localhost", port = 5432,
#     user = "postgres",
#     password = "magnolia50")
myseries <- dbGetQuery(con, "
SELECT id_series, series_name, series_comment, series_type_name,
series_type, ordering_type, entity_type, parent, child_order,
series_type_description
FROM myseries
WHERE (series_name LIKE '%Billboard%' or series_name LIKE '%Juno%'
or series_name LIKE '%Grammy%'
or series_name LIKE '%Rolling Stone%'
or series_comment LIKE '%SPIN magazine%'
or series_name LIKE '%Academy Awards%'
or series_name LIKE '%Roll Hall of Fame%'
or series_name LIKE 'Brit Award%')
AND NOT entity_type = 'event'
ORDER BY entity_type, series_name;
")
#| label: setup
#| echo: false
library(glue)
library(lubridate)
library(tidyverse)
library(DBI)
library(RPostgres)
#
con <- dbConnect(RPostgres::Postgres(),
dbname = "mbdump",
host = "localhost", port = 5432,
user = Sys.getenv("POSTGRES_USER"),
password = Sys.getenv("POSTGRES_PASSWORD")
)
dbListTables(conn = con)
# dbDisconnect(con)
myseries <- dbGetQuery(con, "
SELECT id_series, series_name, series_comment, series_type_name,
series_type, ordering_type, entity_type, parent, child_order,
series_type_description
FROM myseries
WHERE (series_name LIKE '%Billboard%' or series_name LIKE '%Juno%'
or series_name LIKE '%Grammy%'
or series_name LIKE '%Rolling Stone%'
or series_comment LIKE '%SPIN magazine%'
or series_name LIKE '%Academy Awards%'
or series_name LIKE '%Roll Hall of Fame%'
or series_name LIKE 'Brit Award%')
AND NOT entity_type = 'event'
ORDER BY entity_type, series_name;
")
table(myseries$entity_type, useNA = "ifany")
pkgdown:::build_site()
file.edit(file.path("~", ".Rprofile"))
Sys.getenv("POSTGRES_USER")
Sys.getenv("POSTGRES_PASSWORD")
